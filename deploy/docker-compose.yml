services:
    # --------------------
    # Docker Registry priv√©
    # --------------------
    registry:
        image: registry:3.0
        container_name: registry
        restart: always
        user: USER_LOCAL
        ports:
            - "5000:5000"
        environment:
            REGISTRY_STORAGE_DELETE_ENABLED: "true"
            REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: "inmemory"
            REGISTRY_VALIDATION_DISABLED: "true"
            REGISTRY_LOG_LEVEL: "info"
        volumes:
            - ../registry:/var/lib/registry
        networks:
            - locallink-network
        healthcheck:
            test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/v2/" ]
            interval: 10s
            timeout: 5s
            retries: 3

    # --------------------
    # API Symfony + FrankenPHP
    # --------------------
    api:
        image: localhost:5000/locallink-api:latest
        container_name: symfony-api
        restart: always
        ports:
            - "8080:80"
        environment:
            APP_ENV: prod
        volumes:
            - ../api/var:/app/var
            - caddy_data:/data
            - caddy_config:/config
            - ../api/.env.local:/app/.env.local:ro
        networks:
            - locallink-network
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            registry:
                condition: service_healthy

    # --------------------
    # Front Next.js SSR
    # --------------------
    front:
        image: localhost:5000/locallink-front:latest
        container_name: nextjs-front
        restart: always
        environment:
            NODE_ENV: production
            NEXT_PUBLIC_API_URL: API_URL
            NEXT_PUBLIC_DOMAIN: FRONT_URL
        networks:
            - locallink-network
        depends_on:
            registry:
                condition: service_healthy

    # --------------------
    # Monitoring
    # --------------------
    node-exporter:
        image: prom/node-exporter:v1.9.1
        restart: always
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--path.rootfs=/rootfs'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        networks:
            - locallink-network

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:v0.52.0
        ports:
            - "8085:8080"
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        restart: always
        privileged: true
        devices:
            - /dev/kmsg
        networks:
            - locallink-network

    prometheus:
        image: prom/prometheus:v3.5.0
        ports:
            - "9090:9090"
        volumes:
            - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
            - ../monitoring/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
            - prometheus-data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        restart: always
        networks:
            - locallink-network

    grafana:
        image: grafana/grafana:12.3.0-17718666199
        container_name: grafana
        restart: always
        user: USER_LOCAL
        ports:
            - "3001:3000"
        volumes:
            - ../monitoring/grafana:/var/lib/grafana
            - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
        environment:
            GF_SECURITY_ADMIN_USER: GF_ADMIN_USER
            GF_SECURITY_ADMIN_PASSWORD: GF_ADMIN_PASSWORD
        networks:
            - locallink-network
        depends_on:
            - prometheus
            - loki

    loki:
        image: grafana/loki:2.9.0
        ports:
            - "3100:3100"
        user: USER_LOCAL
        volumes:
            - ../monitoring/loki-config.yaml:/etc/loki/local-config.yaml
            - ../monitoring/loki/index:/loki/index
            - ../monitoring/loki/cache:/loki/cache
            - ../monitoring/loki/chunks:/loki/chunks
            - ../monitoring/loki/compactor:/loki/compactor
            - ../monitoring/loki/boltdb-shipper-cache:/loki/boltdb-shipper-cache
            - ../monitoring/loki/boltdb-shipper-active:/loki/boltdb-shipper-active
            - ../monitoring/loki/wal:/wal
            - ../monitoring/loki/wal:/loki/wal
        restart: always
        command: -config.file=/etc/loki/local-config.yaml
        networks:
            - locallink-network

    alloy:
        image: grafana/alloy:v1.10.2
        container_name: grafana-alloy
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - ../api/var/log:/srv/api/var/log:ro
            - ../monitoring/alloy-config.alloy:/etc/alloy/config.alloy
        command:
            - run
            - --server.http.listen-addr=0.0.0.0:12345
            - /etc/alloy/config.alloy
        restart: always
        networks:
            - locallink-network
        depends_on:
            - loki

    alertmanager:
        image: prom/alertmanager:v0.28.1
        container_name: alertmanager
        restart: unless-stopped
        ports:
            - "9093:9093"
        volumes:
            - ../monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
        networks:
            - locallink-network

volumes:
    caddy_data:
    caddy_config:
    prometheus-data:

networks:
    locallink-network:
        driver: bridge
